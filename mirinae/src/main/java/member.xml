<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="memberns">

	<!-- 아이디 중복체크, m_id를 가지고 member 조회 -->
	<select id="select" parameterType="string" resultType="member">
		select * from member where m_id=#{m_id}
	</select>
	
	<!-- 닉네임 중복체크, m_nick를 가지고 member 조회 -->
	<select id="nick_Chk" parameterType="string" resultType="member">
		select m_nick from member where m_nick=#{m_nick}
	</select>
	
	<!-- 이메일 중복체크, m_email를 가지고 member 조회 -->
	<select id="nick_Email" parameterType="string" resultType="member">
		select m_email from member where m_email=#{m_email}
	</select>
	
	<!-- m_name과 m_email 가지고 member 조회 -->
	<select id="find_Id" parameterType="hashmap" resultType="member">
		select * from member where m_name=#{m_name} and m_email=#{m_email}
	</select>
	
	<!-- m_id과 m_email 가지고 member 조회 -->
	<select id="find_Pass" parameterType="hashmap" resultType="member">
		select * from member where m_id=#{m_id} and m_email=#{m_email}
	</select>
	
	
	<!-- 회원가입 성공하면 데이터 입력 -->
	<insert id="insert" parameterType="member">
		insert into member values ((SELECT NVL(MAX(m_no),0)+1 FROM member),
				#{m_id},#{m_pass},#{m_nick},#{m_email},#{m_name},#{tel},
				#{birth},#{address},#{address_d},sysdate,'n')
	</insert>
	
	<!-- 회원수정 닉네임 중복체크, m_nick를 가지고 member 조회 -->
	<select id="ud_nick_Chk" parameterType="string" resultType="string">
		select m_nick from member where m_id=#{m_id}
	</select>
	
	<!-- 회원정보 수정, m_id를 가지고 member 조회 -->
	<update id="update" parameterType="member">
		update member set m_pass=#{m_pass},m_nick=#{m_nick},m_email=#{m_email},tel=#{tel},address=#{address},address_d=#{address_d}
			where m_id=#{m_id}
	</update>
	
	<!-- 회원탈퇴, m_id를 가지고 member 테이블에 있는 del을 y로 바꾸고 삭제한거처럼 처리 -->
	<update id="delete" parameterType="string">
		update member set del='y' where m_id=#{m_id}
	</update>
	
	<!-- 테이블에 저장되어 있는 총 회원수 -->
	<select id="getTotal" resultType="integer">
		select count(*) from member
	</select>
	
	<!-- 전체 회원정보 조회 -->
	<select id="list" parameterType="hashmap" resultType="member">
		select * from (select rowNum rn, e.* from (select * from member order by m_no desc) e) 
			where rn between #{startRow} and #{endRow}
	</select>
	
	<!-- 특정 단어로 검색된 회원정보 조회 -->
	<select id="search_list" parameterType="hashmap" resultType="member">
		select * from (select rowNum rn, e.* from (select * from member where ${part} like '%'||#{searchData}||'%' order by m_no desc) e) 
			where rn between #{startRow} and #{endRow}
	</select>
	
	<!-- 특정 단어로 검색된 총 회원수 -->
	<select id="getSearchTotal" parameterType="hashmap" resultType="integer">
		select count(*) from member where ${part} like '%'||#{searchData}||'%' order by m_no desc
	</select>
	
	<!-- 비밀번호 재설정, m_id를 가지고 변경 -->
	<update id="updatePass" parameterType="member">
		update member set m_pass=#{m_pass} where m_id=#{m_id}
	</update>
	
</mapper>